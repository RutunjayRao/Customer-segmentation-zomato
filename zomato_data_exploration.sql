USE project;

-- Check Datatype of table
SELECT COLUMN_NAME, DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'ZomatoData1';

-- CHECK TABLES IN ALL THE DATABASES
SELECT DISTINCT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.COLUMNS;

-- Check all columns details
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;

SELECT * FROM ZomatoData1;

-- CHECKING FOR DUPLICATE
SELECT RestaurantID, COUNT(RestaurantID)
FROM ZomatoData1
GROUP BY RestaurantID
ORDER BY 2 DESC;

SELECT * FROM ZOMATO_COUNTRY;

-- REMOVING UNWANTED ROWS
DELETE FROM ZomatoData1
WHERE CountryCode IN (' Bar',' Grill',' Bakers & More"',' Chowringhee Lane"',' Grill & Bar"',' Chinese');

DELETE FROM ZomatoData1
WHERE RestaurantID = '18306543';

SELECT * FROM ZomatoData1;

-- COUNTRY CODE COLUMN
SELECT A.CountryCode, B.COUNTRY
FROM ZomatoData1 A
JOIN ZOMATO_COUNTRY B ON A.CountryCode = B.COUNTRYCODE;

ALTER TABLE ZomatoData1 ADD COUNTRY_NAME VARCHAR(50);

UPDATE ZomatoData1 SET COUNTRY_NAME = B.COUNTRY
FROM ZomatoData1 A
JOIN ZOMATO_COUNTRY B ON A.CountryCode = B.COUNTRYCODE;

SELECT * FROM ZomatoData1;

-- CITY COLUMN
SELECT DISTINCT City FROM ZomatoData1
WHERE CITY LIKE '%?%';

SELECT REPLACE(CITY,'?','i')
FROM ZomatoData1 WHERE CITY LIKE '%?%';

UPDATE ZomatoData1 SET City = REPLACE(CITY,'?','i')
WHERE CITY LIKE '%?%';

SELECT COUNTRY_NAME, CITY, COUNT(City) AS TOTAL_REST
FROM ZomatoData1
GROUP BY COUNTRY_NAME, CITY
ORDER BY 1, 2, 3 DESC;

-- LOCALITY COLUMN
SELECT CITY, Locality, COUNT(Locality) AS COUNT_LOCALITY,
    SUM(COUNT(Locality)) OVER(PARTITION BY City ORDER BY CITY, Locality) AS ROLL_COUNT
FROM ZomatoData1
WHERE COUNTRY_NAME = 'INDIA'
GROUP BY Locality, CITY
ORDER BY 1, 2, 3 DESC;

-- DROP COLUMN [Locality], [LocalityVerbose], [Address]
ALTER TABLE ZomatoData1 DROP COLUMN Address;
ALTER TABLE ZomatoData1 DROP COLUMN LocalityVerbose;

-- CUISINES COLUMN
SELECT Cuisines, COUNT(Cuisines)
FROM ZomatoData1
WHERE Cuisines IS NULL OR Cuisines = ' '
GROUP BY Cuisines
ORDER BY 2 DESC;

SELECT Cuisines, COUNT(Cuisines)
FROM ZomatoData1
GROUP BY Cuisines
ORDER BY 2 DESC;

-- CURRENCY COLUMN
SELECT Currency, COUNT(Currency)
FROM ZomatoData1
GROUP BY Currency
ORDER BY 2 DESC;

-- YES/NO COLUMNS
SELECT DISTINCT(Has_Table_booking) FROM ZomatoData1;
SELECT DISTINCT(Has_Online_delivery) FROM ZomatoData1;
SELECT DISTINCT(Is_delivering_now) FROM ZomatoData1;

-- DROP COLUMN [Switch_to_order_menu]
ALTER TABLE ZomatoData1 DROP COLUMN Switch_to_order_menu;

-- PRICE RANGE COLUMN
SELECT DISTINCT(Price_range) FROM ZomatoData1;

-- VOTES COLUMN (CHECKING MIN, MAX, AVG OF VOTE COLUMN)
ALTER TABLE ZomatoData1 MODIFY Votes INT;

SELECT MIN(CAST(Votes AS SIGNED)) AS MIN_VT,
    AVG(CAST(Votes AS SIGNED)) AS AVG_VT,
    MAX(CAST(Votes AS SIGNED)) AS MAX_VT
FROM ZomatoData1;

-- COST COLUMN
ALTER TABLE ZomatoData1 MODIFY Average_Cost_for_two FLOAT;

SELECT Currency, MIN(CAST(Average_Cost_for_two AS SIGNED)) AS MIN_CST,
    AVG(CAST(Average_Cost_for_two AS SIGNED)) AS AVG_CST,
    MAX(CAST(Average_Cost_for_two AS SIGNED)) AS MAX_CST
FROM ZomatoData1
GROUP BY Currency;

-- RATING COLUMN
SELECT MIN(Rating), ROUND(AVG(CAST(Rating AS DECIMAL)), 1) AS AVG_RATING, MAX(Rating)
FROM ZomatoData1;

SELECT CAST(Rating AS DECIMAL) AS NUM FROM ZomatoData1 WHERE CAST(Rating AS DECIMAL) >= 4;

ALTER TABLE ZomatoData1 MODIFY Rating DECIMAL;

SELECT Rating FROM ZomatoData1 WHERE Rating >= 4;

SELECT Rating, CASE
    WHEN Rating >= 1 AND Rating < 2.5 THEN 'POOR'
    WHEN Rating >= 2.5 AND Rating < 3.5 THEN 'GOOD'
    WHEN Rating >= 3.5 AND Rating < 4.5 THEN 'GREAT'
    WHEN Rating >= 4.5 THEN 'EXCELLENT'
    END AS RATE_CATEGORY
FROM ZomatoData1;

ALTER TABLE ZomatoData1 ADD RATE_CATEGORY VARCHAR(20);

SELECT * FROM ZomatoData1;

-- UPDATING NEW ADDED COLUMN WITH REFERENCE OF AN EXISTING COLUMN
UPDATE ZomatoData1 SET RATE_CATEGORY = (CASE
    WHEN Rating >= 1 AND Rating < 2.5 THEN 'POOR'
    WHEN Rating >= 2.5 AND Rating < 3.5 THEN 'GOOD'
    WHEN Rating >= 3.5 AND Rating < 4.5 THEN 'GREAT'
    WHEN Rating >= 4.5 THEN 'EXCELLENT'
    END);

SELECT * FROM ZomatoData1;